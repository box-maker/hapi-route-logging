{"version":3,"sources":["../src/route-list.js"],"names":["getRouteList","server","list","tables","table","forEach","routesTable","element","routeDescription","settings","description","err","push","method","toUpperCase","path","id","info","uri","labels","routes","formatHeader","heading","header","t","blue","bold","formatRoutes","listRoutes","route","columns","showHeaders","columnSplitter","config","align","dataTransform","data","green","yellow","headingTransform","console","log","underline","cyan","gray"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AAEA;;AAEA,SAASA,YAAT,CAAsBC,MAAtB,EAA8B;AAC5B,QAAMC,OAAO,EAAb;AACA,QAAMC,SAASF,OAAOG,KAAP,EAAf;AACAD,SAAOE,OAAP,CAAeD,SAAS;AACtB,UAAME,cAAc,EAApB;AACAF,UAAMA,KAAN,CAAYC,OAAZ,CAAoBE,WAAW;AAC7B;AACA,UAAIC,gBAAJ;AACA,UAAI;AACFA,2BAAmBD,QAAQE,QAAR,CAAiBC,WAApC;AACD,OAFD,CAEE,OAAOC,GAAP,EAAY;AACZH,2BAAmB,EAAnB;AACD;AACDF,kBAAYM,IAAZ,CAAiB;AACfC,gBAAQN,QAAQM,MAAR,CAAeC,WAAf,EADO;AAEfC,cAAMR,QAAQQ,IAFC;AAGfL,qBAAaF;AAHE,OAAjB;AAKD,KAbD,EAaG,IAbH;AAcAN,SAAKU,IAAL,CAAU;AACRI,UAAIZ,MAAMa,IAAN,CAAWD,EADP;AAERE,WAAKd,MAAMa,IAAN,CAAWC,GAFR;AAGRC,cAAQf,MAAMe,MAHN;AAIRC,cAAQd;AAJA,KAAV;AAMD,GAtBD,EAsBG,IAtBH;;AAwBA,SAAOJ,IAAP;AACD;;AAED,SAASmB,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,QAAMC,SAAS,eAAKC,CAAL,CAAOF,OAAP,CAAf;AACA,SAAO,gBAAMG,IAAN,CAAWC,IAAX,CAAgBH,OAAOT,WAAP,EAAhB,CAAP;AACD;;AAED,SAASa,YAAT,CAAsB1B,MAAtB,EAA8B;AAC5B,QAAM2B,aAAa5B,aAAaC,MAAb,CAAnB;AACA2B,aAAWvB,OAAX,CAAmBwB,SAAS;AAC1B,UAAMC,UAAU,yBAAUD,MAAMT,MAAhB,EAAwB;AACtCU,eAAS,CAAC,QAAD,EAAW,MAAX,EAAmB,aAAnB,CAD6B;AAEtCC,mBAAa,IAFyB;AAGtCC,sBAAgB,KAHsB;AAItCC,cAAQ;AACNpB,gBAAQ;AACNqB,iBAAO,QADD;AAENC,yBAAeC,QAAQ;AACrB,mBAAO,gBAAMC,KAAN,CAAYD,IAAZ,CAAP;AACD;AAJK,SADF;AAON1B,qBAAa;AACXyB,yBAAeC,QAAQ;AACrB,mBAAO,gBAAME,MAAN,CAAaF,IAAb,CAAP;AACD;AAHU;AAPP,OAJ8B;AAiBtCG,wBAAkBjB,WAAW;AAC3B,eAAOD,aAAaC,OAAb,CAAP;AACD;AAnBqC,KAAxB,CAAhB;AAqBAkB,YAAQC,GAAR,CACG,GAAE,eAAKjB,CAAL,CAAO,KAAP,CAAc,KAAI,gBAAMkB,SAAN,CAAgBC,IAAhB,CAAqBd,MAAMX,GAA3B,CAAgC,MAAK,eAAKM,CAAL,CAAO,QAAP,CAAiB,KAAI,gBAAMoB,IAAN,CAAWf,MAAMV,MAAjB,CAAyB,EAD1G;AAGAqB,YAAQC,GAAR,CAAYX,OAAZ;AACD,GA1BD,EA0BG,IA1BH;AA2BD;;QAEO9B,Y,GAAAA,Y;QAAc2B,Y,GAAAA,Y","file":"route-list.js","sourcesContent":["import columnify from 'columnify';\nimport chalk from 'chalk';\n\nimport {i18n} from './language';\n\n// TODO: Access info via web interface\n\nfunction getRouteList(server) {\n  const list = [];\n  const tables = server.table();\n  tables.forEach(table => {\n    const routesTable = [];\n    table.table.forEach(element => {\n      // TODO: Show element.config.auth\n      let routeDescription;\n      try {\n        routeDescription = element.settings.description;\n      } catch (err) {\n        routeDescription = '';\n      }\n      routesTable.push({\n        method: element.method.toUpperCase(),\n        path: element.path,\n        description: routeDescription\n      });\n    }, this);\n    list.push({\n      id: table.info.id,\n      uri: table.info.uri,\n      labels: table.labels,\n      routes: routesTable\n    });\n  }, this);\n\n  return list;\n}\n\nfunction formatHeader(heading) {\n  const header = i18n.t(heading);\n  return chalk.blue.bold(header.toUpperCase());\n}\n\nfunction formatRoutes(server) {\n  const listRoutes = getRouteList(server);\n  listRoutes.forEach(route => {\n    const columns = columnify(route.routes, {\n      columns: ['method', 'path', 'description'],\n      showHeaders: true,\n      columnSplitter: ' | ',\n      config: {\n        method: {\n          align: 'center',\n          dataTransform: data => {\n            return chalk.green(data);\n          }\n        },\n        description: {\n          dataTransform: data => {\n            return chalk.yellow(data);\n          }\n        }\n      },\n      headingTransform: heading => {\n        return formatHeader(heading);\n      }\n    });\n    console.log(\n      `${i18n.t('URI')}: ${chalk.underline.cyan(route.uri)} - ${i18n.t('Labels')}: ${chalk.gray(route.labels)}`\n    );\n    console.log(columns);\n  }, this);\n}\n\nexport {getRouteList, formatRoutes};\n"]}